service: sls-typescript-todo-api-with-dynamodb

frameworkVersion: ">=1.1.0 <2.0.0"
plugins:  
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-offline-scheduler

custom:
  serverless-offline:
    port: 3001

  ## Common configuration
  defaultRegion: eu-west-1
  region: ${opt:region, self:custom.defaultRegion}
  environment: ${opt:stage, 'sandbox'}

  ## Handler configuration
  handlerLocation: "dist/handlers"

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-1

  # IAM role statements so that services can be accessed in the AWS account
  iamRoleStatements: 
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}

functions:

  create:
    handler: ${self:custom.handlerLocation}/create.createSingular
    events:
      - http:
          path: todo
          method: post
          cors: true

  getAll:
    handler: ${self:custom.handlerLocation}/get.getAll
    events:
      - http:
          path: todo
          method: get
          cors: true

  getById:
    handler: ${self:custom.handlerLocation}/get.getById
    events:
      - http:
          path: todo/{id}
          method: get
          cors: true
          request: 
            parameters: 
              paths: 
                id: true

resources:
  Resources:
    TodoTable: ${file(./serverless-partials/dynamodb-todo.yaml)}
