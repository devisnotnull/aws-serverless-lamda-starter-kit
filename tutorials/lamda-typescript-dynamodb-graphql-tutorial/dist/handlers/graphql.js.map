{"version":3,"file":"graphql.js","sourceRoot":"","sources":["../../src/handlers/graphql.ts"],"names":[],"mappings":";;AAEA,+DAAyD;AAEzD,oDAAoD;AACpD,MAAM,QAAQ,GAAG,0BAAG,CAAA;;;;CAInB,CAAC;AAEF,oDAAoD;AACpD,MAAM,SAAS,GAAG;IAChB,KAAK,EAAE;QACL,KAAK,EAAE,GAAG,EAAE,CAAC,cAAc;KAC5B;CACF,CAAC;AAEF,MAAM,MAAM,GAAiB,IAAI,mCAAY,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC;AAE1D,QAAA,OAAO,GAAuG,MAAM,CAAC,aAAa,EAAE,CAAC","sourcesContent":["import { Context, APIGatewayProxyResult, APIGatewayProxyEvent, Callback } from 'aws-lambda';\n\nimport { ApolloServer, gql } from 'apollo-server-lambda';\n\n// Construct a schema, using GraphQL schema language\nconst typeDefs = gql`\n  type Query {\n    hello: String\n  }\n`;\n\n// Provide resolver functions for your schema fields\nconst resolvers = {\n  Query: {\n    hello: () => 'Hello world!',\n  },\n};\n\nconst server: ApolloServer = new ApolloServer({ typeDefs, resolvers });\n\nexport const handler: (event: APIGatewayProxyEvent, context: Context, callback: Callback<APIGatewayProxyResult>) => void = server.createHandler();"]}