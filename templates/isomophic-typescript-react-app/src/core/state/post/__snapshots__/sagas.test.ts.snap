// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`post saga: delete saga: snapshot: fetchAllSaga with no page and limit params 1`] = `
Object {
  "fork": Array [
    Object {
      "@@redux-saga/IO": true,
      "combinator": false,
      "payload": Object {
        "args": Array [
          "@post/DELETE_POST_SUCCESS",
          "@@redux-saga-test-plan/json/function/fetchAllSaga",
        ],
        "context": null,
        "fn": "@@redux-saga-test-plan/json/function/takeEvery",
      },
      "type": "FORK",
    },
  ],
  "take": Array [
    Object {
      "@@redux-saga/IO": true,
      "combinator": false,
      "payload": Object {
        "pattern": "@post/DELETE_POST_SUCCESS",
      },
      "type": "TAKE",
    },
  ],
}
`;

exports[`post saga: delete saga: snapshot: fetchAllSaga with no page and limit params 2`] = `
Object {
  "fork": Array [
    Object {
      "@@redux-saga/IO": true,
      "combinator": false,
      "payload": Object {
        "args": Array [
          "@post/DELETE_POST_SUCCESS",
          "@@redux-saga-test-plan/json/function/fetchAllSaga",
        ],
        "context": null,
        "fn": "@@redux-saga-test-plan/json/function/takeEvery",
      },
      "type": "FORK",
    },
  ],
  "take": Array [
    Object {
      "@@redux-saga/IO": true,
      "combinator": false,
      "payload": Object {
        "pattern": "@post/DELETE_POST_SUCCESS",
      },
      "type": "TAKE",
    },
  ],
}
`;

exports[`post saga: fetchall saga: snapshot: fetchAllSaga with no page and limit params 1`] = `
Object {
  "put": Array [
    Object {
      "@@redux-saga/IO": true,
      "combinator": false,
      "payload": Object {
        "action": Object {
          "request": Object {
            "query": "query($options: PageQueryOptions!) {
        posts(options: $options) {
            data {
                id
                title
            }
            meta {
                totalCount
            }
        }
    }",
            "variables": Object {
              "options": Object {
                "paginate": Object {
                  "limit": 2,
                  "page": 1,
                },
              },
            },
          },
          "type": "@post/FETCH_ALL_START",
        },
        "channel": undefined,
      },
      "type": "PUT",
    },
  ],
}
`;

exports[`post saga: post saga: snapshot: fetchAllSaga with no page and limit params 1`] = `
Object {
  "fork": Array [
    Object {
      "@@redux-saga/IO": true,
      "combinator": false,
      "payload": Object {
        "args": Array [
          "@post/CREATE_POST_SUCCESS",
          "@@redux-saga-test-plan/json/function/fetchAllSaga",
        ],
        "context": null,
        "fn": "@@redux-saga-test-plan/json/function/takeEvery",
      },
      "type": "FORK",
    },
  ],
  "take": Array [
    Object {
      "@@redux-saga/IO": true,
      "combinator": false,
      "payload": Object {
        "pattern": "@post/CREATE_POST_SUCCESS",
      },
      "type": "TAKE",
    },
  ],
}
`;
