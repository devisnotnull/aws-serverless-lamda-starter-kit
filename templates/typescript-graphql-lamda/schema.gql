# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type DeleteResult {
  sucess: Boolean!
  affected: Float!
}

type Mutation {
  addRange(data: RangeInput!): Range!
  deleteRange(uuid: String!): DeleteResult!
  addTag(data: TagInput!): Tag!
  deleteTag(data: String!): Tag!
  addProduct(data: ProductInput!): Product!
  deleteProduct(uuid: String!): Product!
  addVariant(data: VariantInput!): Variant!
  deleteVariant(data: String!): Variant!
  addOptionGroup(data: OptionGroupInput!): OptionGroup!
  deleteOptionGroup(data: String!): OptionGroup!
  addOption(data: OptionInput!): Option!
  deleteOption(data: String!): Option!
  addRelationship(data: RelationshipItemInput!): RelationshipItem!
  deleteRelationship(uuid: String!): DeleteResult!
}

type Option {
  id: Float!
  uuid: String!
  name: String!
}

type OptionGroup {
  id: Float!
  uuid: String!
  name: String!
}

input OptionGroupInput {
  uuid: String!
  name: String!
}

input OptionInput {
  uuid: String!
  name: String!
}

type Product {
  id: Float!
  uuid: String!
  name: String!
}

input ProductInput {
  uuid: String!
  name: String!
}

type Query {
  getAllRanges: [Range!]!
  getRangeById(uuid: String!): Range!
  getAllTags: [Tag!]!
  getTagById(uuid: String!): Tag!
  getAllProducts: [Product!]!
  getProductById(uuid: String!): Product!
  getAllVariants: [Variant!]!
  getVariantById(uuid: String!): Variant!
  getAllOptionGroups: [OptionGroup!]!
  getOptionGroupById(id: String!): OptionGroup!
  getAllOptions: [Option!]!
  getOptionById(id: String!): Option!
  getAllRelationships: [RelationshipItem!]!
  getGategorizationByParentType(type: String!): [RelationshipItem!]!
  getGategorizationByParentUUID(uuid: String!): [RelationshipItem!]!
  getGategorizationByChildUUID(uuid: String!): [RelationshipItem!]!
}

type Range {
  id: Float!
  uuid: String!
  name: String!
}

input RangeInput {
  uuid: String!
  name: String!
}

type RelationshipItem {
  id: Float!
  uuid: String!
  parentType: String!
  parentUuid: String!
  brand: String
  locale: String
  weight: Float
  relationshipType: String!
  childUuid: String!
}

input RelationshipItemInput {
  uuid: String
  parentType: String!
  parentUuid: String!
  brand: String!
  locale: String!
  weight: Float!
  relationshipType: String!
  childUuid: String!
}

type Tag {
  id: Float!
  uuid: String!
  key: String!
  value: String!
}

input TagInput {
  uuid: String
  value: String!
}

type Variant {
  id: Float!
  uuid: String!
  name: String!
}

input VariantInput {
  uuid: String!
  name: String!
}
